//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Genesis_GameClient_GameEntryWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Genesis.GameClient.GameEntry), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("RegisterAdditionalDebuggers", RegisterAdditionalDebuggers);
		L.RegFunction("Restart", Restart);
		L.RegFunction("Shutdown", Shutdown);
		L.RegFunction("SetLogWhiteList", SetLogWhiteList);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Data", get_Data, null);
		L.RegVar("Input", get_Input, null);
		L.RegVar("SceneLogic", get_SceneLogic, null);
		L.RegVar("LobbyLogic", get_LobbyLogic, null);
		L.RegVar("RoomLogic", get_RoomLogic, null);
		L.RegVar("TimeLine", get_TimeLine, null);
		L.RegVar("Behavior", get_Behavior, null);
		L.RegVar("Impact", get_Impact, null);
		L.RegVar("CameraShaking", get_CameraShaking, null);
		L.RegVar("NativeCallback", get_NativeCallback, null);
		L.RegVar("OfflineMode", get_OfflineMode, null);
		L.RegVar("Loading", get_Loading, null);
		L.RegVar("Waiting", get_Waiting, null);
		L.RegVar("NGUIAtlas", get_NGUIAtlas, null);
		L.RegVar("ServerConfig", get_ServerConfig, null);
		L.RegVar("Time", get_Time, null);
		L.RegVar("StringReplacement", get_StringReplacement, null);
		L.RegVar("TimeScale", get_TimeScale, null);
		L.RegVar("HighlightProjector", get_HighlightProjector, null);
		L.RegVar("CameraPostEffect", get_CameraPostEffect, null);
		L.RegVar("ChessManager", get_ChessManager, null);
		L.RegVar("Texture", get_Texture, null);
		L.RegVar("UIBackground", get_UIBackground, null);
		L.RegVar("ScreenTouchEffect", get_ScreenTouchEffect, null);
		L.RegVar("AntiOcclusion", get_AntiOcclusion, null);
		L.RegVar("PlayerEnergy", get_PlayerEnergy, null);
		L.RegVar("Reminder", get_Reminder, null);
		L.RegVar("Tutorial", get_Tutorial, null);
		L.RegVar("ClientConfig", get_ClientConfig, null);
		L.RegVar("RewardViewer", get_RewardViewer, null);
		L.RegVar("UIFragment", get_UIFragment, null);
		L.RegVar("Lua", get_Lua, null);
		L.RegVar("DataTableProxy", get_DataTableProxy, null);
		L.RegVar("Uwa", get_Uwa, null);
		L.RegVar("WhereToGet", get_WhereToGet, null);
		L.RegVar("IsAvailable", get_IsAvailable, null);
		L.RegVar("Base", get_Base, null);
		L.RegVar("DataTable", get_DataTable, null);
		L.RegVar("Debugger", get_Debugger, null);
		L.RegVar("Download", get_Download, null);
		L.RegVar("Entity", get_Entity, null);
		L.RegVar("Event", get_Event, null);
		L.RegVar("Fsm", get_Fsm, null);
		L.RegVar("Localization", get_Localization, null);
		L.RegVar("Network", get_Network, null);
		L.RegVar("ObjectPool", get_ObjectPool, null);
		L.RegVar("Procedure", get_Procedure, null);
		L.RegVar("Resource", get_Resource, null);
		L.RegVar("Scene", get_Scene, null);
		L.RegVar("Setting", get_Setting, null);
		L.RegVar("Sound", get_Sound, null);
		L.RegVar("UI", get_UI, null);
		L.RegVar("WebRequest", get_WebRequest, null);
		L.RegVar("BuildInfo", get_BuildInfo, set_BuildInfo);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterAdditionalDebuggers(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Genesis.GameClient.GameEntry.RegisterAdditionalDebuggers();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Restart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Genesis.GameClient.GameEntry.Restart();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Shutdown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Genesis.GameClient.GameEntry.Shutdown();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLogWhiteList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string[] arg0 = ToLua.CheckStringArray(L, 1);
			Genesis.GameClient.GameEntry.SetLogWhiteList(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Data(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Data);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Input(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Input);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SceneLogic(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.SceneLogic);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LobbyLogic(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.LobbyLogic);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RoomLogic(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.RoomLogic);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TimeLine(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.TimeLine);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Behavior(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Behavior);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Impact(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Impact);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CameraShaking(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.CameraShaking);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NativeCallback(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.NativeCallback);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OfflineMode(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.OfflineMode);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Loading(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Loading);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Waiting(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Waiting);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NGUIAtlas(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.NGUIAtlas);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ServerConfig(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.ServerConfig);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Time(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Time);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_StringReplacement(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.StringReplacement);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TimeScale(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.TimeScale);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HighlightProjector(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.HighlightProjector);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CameraPostEffect(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.CameraPostEffect);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ChessManager(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, Genesis.GameClient.GameEntry.ChessManager);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Texture(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Texture);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UIBackground(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.UIBackground);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ScreenTouchEffect(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.ScreenTouchEffect);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AntiOcclusion(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.AntiOcclusion);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlayerEnergy(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.PlayerEnergy);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Reminder(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Reminder);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Tutorial(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Tutorial);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ClientConfig(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.ClientConfig);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RewardViewer(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.RewardViewer);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UIFragment(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.UIFragment);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Lua(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Lua);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DataTableProxy(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.DataTableProxy);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Uwa(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Uwa);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WhereToGet(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.WhereToGet);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsAvailable(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Genesis.GameClient.GameEntry.IsAvailable);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Base(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Base);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DataTable(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.DataTable);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Debugger(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Debugger);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Download(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Download);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Entity(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Entity);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Event(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Event);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Fsm(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Fsm);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Localization(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Localization);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Network(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Network);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ObjectPool(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.ObjectPool);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Procedure(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Procedure);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Resource(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Resource);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Scene(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Scene);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Setting(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Setting);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Sound(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.Sound);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UI(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.UI);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WebRequest(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Genesis.GameClient.GameEntry.WebRequest);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BuildInfo(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, Genesis.GameClient.GameEntry.BuildInfo);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BuildInfo(IntPtr L)
	{
		try
		{
			Genesis.GameClient.BuildInfo arg0 = (Genesis.GameClient.BuildInfo)ToLua.CheckObject(L, 2, typeof(Genesis.GameClient.BuildInfo));
			Genesis.GameClient.GameEntry.BuildInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

