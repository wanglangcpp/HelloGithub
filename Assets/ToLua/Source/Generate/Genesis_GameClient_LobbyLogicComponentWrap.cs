//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Genesis_GameClient_LobbyLogicComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Genesis.GameClient.LobbyLogicComponent), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("AchivementClaimReward", AchivementClaimReward);
		L.RegFunction("GearFoundryCreateTeam", GearFoundryCreateTeam);
		L.RegFunction("GearFoundryMatchTeam", GearFoundryMatchTeam);
		L.RegFunction("GearFoundryInviteFriend", GearFoundryInviteFriend);
		L.RegFunction("GearFoundryRespondToInvitation", GearFoundryRespondToInvitation);
		L.RegFunction("GearFoundryKickPlayer", GearFoundryKickPlayer);
		L.RegFunction("GearFoundryLeaveTeam", GearFoundryLeaveTeam);
		L.RegFunction("GearFoundryPerform", GearFoundryPerform);
		L.RegFunction("GearFoundryClaimReward", GearFoundryClaimReward);
		L.RegFunction("RefreshOfflineArena", RefreshOfflineArena);
		L.RegFunction("PickOfflineArenaReward", PickOfflineArenaReward);
		L.RegFunction("BuyAdditionalArenaCount", BuyAdditionalArenaCount);
		L.RegFunction("RequestChanceInfo", RequestChanceInfo);
		L.RegFunction("OpenChance", OpenChance);
		L.RegFunction("OpenAllChances", OpenAllChances);
		L.RegFunction("RefreshChanceInfo", RefreshChanceInfo);
		L.RegFunction("SendChat", SendChat);
		L.RegFunction("DailyQuestClaimReward", DailyQuestClaimReward);
		L.RegFunction("ClaimActivenessChest", ClaimActivenessChest);
		L.RegFunction("DoDailyLogin", DoDailyLogin);
		L.RegFunction("ExchangeEnergy", ExchangeEnergy);
		L.RegFunction("ExchangeCoin", ExchangeCoin);
		L.RegFunction("SendFriendRequest", SendFriendRequest);
		L.RegFunction("RemoveFriend", RemoveFriend);
		L.RegFunction("SearchForPlayers", SearchForPlayers);
		L.RegFunction("AskForRecommendedPlayers", AskForRecommendedPlayers);
		L.RegFunction("GiveEnergyToFriend", GiveEnergyToFriend);
		L.RegFunction("ReceiveEnergyFromFriend", ReceiveEnergyFromFriend);
		L.RegFunction("AcceptFriendRequest", AcceptFriendRequest);
		L.RegFunction("RefuseFriendRequest", RefuseFriendRequest);
		L.RegFunction("GetOneTypeOfGear", GetOneTypeOfGear);
		L.RegFunction("GetRecommendedGear", GetRecommendedGear);
		L.RegFunction("GetUpgradeCost", GetUpgradeCost);
		L.RegFunction("GetFastComposeGears", GetFastComposeGears);
		L.RegFunction("ChangeHeroTeam", ChangeHeroTeam);
		L.RegFunction("ChangeChessBattleHeroTeam", ChangeChessBattleHeroTeam);
		L.RegFunction("ComposeHero", ComposeHero);
		L.RegFunction("HeroSkillLevelUp", HeroSkillLevelUp);
		L.RegFunction("ActivateSkillBadgeSlot", ActivateSkillBadgeSlot);
		L.RegFunction("InsertSkillBadge", InsertSkillBadge);
		L.RegFunction("RemoveSkillBadge", RemoveSkillBadge);
		L.RegFunction("LevelUpSkillBadge", LevelUpSkillBadge);
		L.RegFunction("RequestIncreaseHeroQuality", RequestIncreaseHeroQuality);
		L.RegFunction("RequestUseHeroQualityItem", RequestUseHeroQualityItem);
		L.RegFunction("RequestSynthesizeHeroQualityItem", RequestSynthesizeHeroQualityItem);
		L.RegFunction("InstanceIsOpen", InstanceIsOpen);
		L.RegFunction("PickUpChestReward", PickUpChestReward);
		L.RegFunction("SweepLevel", SweepLevel);
		L.RegFunction("EnterInstance", EnterInstance);
		L.RegFunction("EnterChessBattle", EnterChessBattle);
		L.RegFunction("EnterArenaBattle", EnterArenaBattle);
		L.RegFunction("LeaveArenaBattle", LeaveArenaBattle);
		L.RegFunction("ReviveHeroes", ReviveHeroes);
		L.RegFunction("EnterInstanceForResource", EnterInstanceForResource);
		L.RegFunction("LeaveInstanceForResource", LeaveInstanceForResource);
		L.RegFunction("EnterMimicMeleeInstance", EnterMimicMeleeInstance);
		L.RegFunction("InventoryUseHeroExpItem", InventoryUseHeroExpItem);
		L.RegFunction("ShowAllLobbyNpcs", ShowAllLobbyNpcs);
		L.RegFunction("DeleteMail", DeleteMail);
		L.RegFunction("DeleteMails", DeleteMails);
		L.RegFunction("MarkMailAsRead", MarkMailAsRead);
		L.RegFunction("MarkMailsAsRead", MarkMailsAsRead);
		L.RegFunction("ReceiveAllEmails", ReceiveAllEmails);
		L.RegFunction("ReceiveEmailItems", ReceiveEmailItems);
		L.RegFunction("UpdateNearbyPlayersPosition", UpdateNearbyPlayersPosition);
		L.RegFunction("ShowNearbyPlayers", ShowNearbyPlayers);
		L.RegFunction("RefreshNearbyPlayers", RefreshNearbyPlayers);
		L.RegFunction("RefreshNearbyPlayerMoveState", RefreshNearbyPlayerMoveState);
		L.RegFunction("MoveNearbyPlayer", MoveNearbyPlayer);
		L.RegFunction("RequestNewGearStrengthen", RequestNewGearStrengthen);
		L.RegFunction("RequestNewGearQualityLevelUp", RequestNewGearQualityLevelUp);
		L.RegFunction("OperationActivityRequest", OperationActivityRequest);
		L.RegFunction("ChangePlayerPortrait", ChangePlayerPortrait);
		L.RegFunction("GetPlayerInfo", GetPlayerInfo);
		L.RegFunction("GetPlayerOnlineStatus", GetPlayerOnlineStatus);
		L.RegFunction("StartPvpMatching", StartPvpMatching);
		L.RegFunction("StopPvpMatching", StopPvpMatching);
		L.RegFunction("GetPvpInfo", GetPvpInfo);
		L.RegFunction("GetSinglePvpRank", GetSinglePvpRank);
		L.RegFunction("GetWorldSinglePvpRank", GetWorldSinglePvpRank);
		L.RegFunction("RefreshRankList", RefreshRankList);
		L.RegFunction("CommonShopBuy", CommonShopBuy);
		L.RegFunction("ShopManuallyRefresh", ShopManuallyRefresh);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("CosmosCrack", get_CosmosCrack, null);
		L.RegVar("CurrentPvpType", get_CurrentPvpType, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AchivementClaimReward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.AchivementClaimReward(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GearFoundryCreateTeam(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.GearFoundryCreateTeam();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GearFoundryMatchTeam(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.GearFoundryMatchTeam(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GearFoundryInviteFriend(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.GearFoundryInviteFriend(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GearFoundryRespondToInvitation(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.GearFoundryRespondToInvitation(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GearFoundryKickPlayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.GearFoundryKickPlayer(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GearFoundryLeaveTeam(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.GearFoundryLeaveTeam();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GearFoundryPerform(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.GearFoundryPerform();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GearFoundryClaimReward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.GearFoundryClaimReward(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RefreshOfflineArena(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.RefreshOfflineArena(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PickOfflineArenaReward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.PickOfflineArenaReward();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BuyAdditionalArenaCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.BuyAdditionalArenaCount();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RequestChanceInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			Genesis.GameClient.ChanceType arg0 = (Genesis.GameClient.ChanceType)ToLua.CheckObject(L, 2, typeof(Genesis.GameClient.ChanceType));
			obj.RequestChanceInfo(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OpenChance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			Genesis.GameClient.ChanceType arg0 = (Genesis.GameClient.ChanceType)ToLua.CheckObject(L, 2, typeof(Genesis.GameClient.ChanceType));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.OpenChance(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OpenAllChances(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			Genesis.GameClient.ChanceType arg0 = (Genesis.GameClient.ChanceType)ToLua.CheckObject(L, 2, typeof(Genesis.GameClient.ChanceType));
			obj.OpenAllChances(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RefreshChanceInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			Genesis.GameClient.ChanceType arg0 = (Genesis.GameClient.ChanceType)ToLua.CheckObject(L, 2, typeof(Genesis.GameClient.ChanceType));
			obj.RefreshChanceInfo(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendChat(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			Genesis.GameClient.ChatType arg0 = (Genesis.GameClient.ChatType)ToLua.CheckObject(L, 2, typeof(Genesis.GameClient.ChatType));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			obj.SendChat(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DailyQuestClaimReward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.DailyQuestClaimReward(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClaimActivenessChest(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ClaimActivenessChest(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DoDailyLogin(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.DoDailyLogin();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExchangeEnergy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.ExchangeEnergy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExchangeCoin(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.ExchangeCoin();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendFriendRequest(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SendFriendRequest(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveFriend(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.RemoveFriend(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SearchForPlayers(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent), typeof(int)))
			{
				Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				obj.SearchForPlayers(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent), typeof(string)))
			{
				Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				obj.SearchForPlayers(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Genesis.GameClient.LobbyLogicComponent.SearchForPlayers");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AskForRecommendedPlayers(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.AskForRecommendedPlayers();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GiveEnergyToFriend(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.GiveEnergyToFriend(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReceiveEnergyFromFriend(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ReceiveEnergyFromFriend(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AcceptFriendRequest(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.AcceptFriendRequest(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RefuseFriendRequest(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.RefuseFriendRequest(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetOneTypeOfGear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			System.Collections.Generic.List<Genesis.GameClient.GearData> o = obj.GetOneTypeOfGear(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRecommendedGear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			System.Collections.Generic.List<Genesis.GameClient.GearData> arg0 = (System.Collections.Generic.List<Genesis.GameClient.GearData>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Genesis.GameClient.GearData>));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			System.Collections.Generic.List<Genesis.GameClient.GearData> o = obj.GetRecommendedGear(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUpgradeCost(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2;
			int o = obj.GetUpgradeCost(arg0, arg1, out arg2);
			LuaDLL.lua_pushinteger(L, o);
			LuaDLL.lua_pushinteger(L, arg2);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFastComposeGears(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			Genesis.GameClient.GearData arg0 = (Genesis.GameClient.GearData)ToLua.CheckObject(L, 2, typeof(Genesis.GameClient.GearData));
			Genesis.GameClient.GearData[] o = obj.GetFastComposeGears(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeHeroTeam(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			System.Collections.Generic.List<int> arg0 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<int>));
			Genesis.GameClient.HeroTeamType arg1 = (Genesis.GameClient.HeroTeamType)ToLua.CheckObject(L, 3, typeof(Genesis.GameClient.HeroTeamType));
			obj.ChangeHeroTeam(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeChessBattleHeroTeam(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			System.Collections.Generic.List<int> arg0 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<int>));
			obj.ChangeChessBattleHeroTeam(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ComposeHero(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ComposeHero(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HeroSkillLevelUp(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.HeroSkillLevelUp(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ActivateSkillBadgeSlot(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			obj.ActivateSkillBadgeSlot(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InsertSkillBadge(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 6);
			obj.InsertSkillBadge(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveSkillBadge(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			obj.RemoveSkillBadge(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LevelUpSkillBadge(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 8);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 6);
			int arg5 = (int)LuaDLL.luaL_checknumber(L, 7);
			int arg6 = (int)LuaDLL.luaL_checknumber(L, 8);
			obj.LevelUpSkillBadge(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RequestIncreaseHeroQuality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.RequestIncreaseHeroQuality(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RequestUseHeroQualityItem(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.RequestUseHeroQualityItem(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RequestSynthesizeHeroQualityItem(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.RequestSynthesizeHeroQualityItem(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InstanceIsOpen(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.InstanceIsOpen(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PickUpChestReward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.PickUpChestReward(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SweepLevel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SweepLevel(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnterInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.EnterInstance(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnterChessBattle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.EnterChessBattle(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnterArenaBattle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.EnterArenaBattle(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LeaveArenaBattle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.LeaveArenaBattle(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReviveHeroes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.ReviveHeroes();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnterInstanceForResource(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.EnterInstanceForResource(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LeaveInstanceForResource(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
			obj.LeaveInstanceForResource(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnterMimicMeleeInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.EnterMimicMeleeInstance(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InventoryUseHeroExpItem(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.InventoryUseHeroExpItem(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowAllLobbyNpcs(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.ShowAllLobbyNpcs();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeleteMail(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.DeleteMail(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeleteMails(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			System.Collections.Generic.List<int> arg0 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<int>));
			obj.DeleteMails(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MarkMailAsRead(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.MarkMailAsRead(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MarkMailsAsRead(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			System.Collections.Generic.List<int> arg0 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<int>));
			obj.MarkMailsAsRead(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReceiveAllEmails(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.ReceiveAllEmails();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReceiveEmailItems(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int[] arg0 = ToLua.CheckParamsNumber<int>(L, 2, count - 1);
			obj.ReceiveEmailItems(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateNearbyPlayersPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.UpdateNearbyPlayersPosition();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowNearbyPlayers(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.ShowNearbyPlayers();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RefreshNearbyPlayers(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.RefreshNearbyPlayers();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RefreshNearbyPlayerMoveState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			Genesis.GameClient.NearbyPlayerData arg0 = (Genesis.GameClient.NearbyPlayerData)ToLua.CheckObject(L, 2, typeof(Genesis.GameClient.NearbyPlayerData));
			obj.RefreshNearbyPlayerMoveState(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveNearbyPlayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			Genesis.GameClient.NearbyPlayerData arg0 = (Genesis.GameClient.NearbyPlayerData)ToLua.CheckObject(L, 2, typeof(Genesis.GameClient.NearbyPlayerData));
			obj.MoveNearbyPlayer(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RequestNewGearStrengthen(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.RequestNewGearStrengthen(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RequestNewGearQualityLevelUp(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.RequestNewGearQualityLevelUp(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OperationActivityRequest(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			System.Collections.Generic.IDictionary<string,string> arg0 = (System.Collections.Generic.IDictionary<string,string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.IDictionary<string,string>));
			obj.OperationActivityRequest(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangePlayerPortrait(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ChangePlayerPortrait(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPlayerInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.GetPlayerInfo(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPlayerOnlineStatus(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			System.Collections.Generic.List<int> arg0 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<int>));
			obj.GetPlayerOnlineStatus(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartPvpMatching(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			Genesis.GameClient.PvpType arg0 = (Genesis.GameClient.PvpType)ToLua.CheckObject(L, 2, typeof(Genesis.GameClient.PvpType));
			obj.StartPvpMatching(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopPvpMatching(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.StopPvpMatching();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPvpInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.GetPvpInfo();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSinglePvpRank(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.GetSinglePvpRank();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetWorldSinglePvpRank(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			obj.GetWorldSinglePvpRank();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RefreshRankList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			Genesis.GameClient.RankListType arg0 = (Genesis.GameClient.RankListType)ToLua.CheckObject(L, 2, typeof(Genesis.GameClient.RankListType));
			obj.RefreshRankList(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CommonShopBuy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.CommonShopBuy(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShopManuallyRefresh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)ToLua.CheckObject(L, 1, typeof(Genesis.GameClient.LobbyLogicComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ShopManuallyRefresh(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CosmosCrack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)o;
			Genesis.GameClient.LobbyLogicComponent.ActivityCosmosCrack ret = obj.CosmosCrack;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CosmosCrack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CurrentPvpType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Genesis.GameClient.LobbyLogicComponent obj = (Genesis.GameClient.LobbyLogicComponent)o;
			Genesis.GameClient.PvpType ret = obj.CurrentPvpType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CurrentPvpType on a nil value" : e.Message);
		}
	}
}

