//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// Proto source: PBArenaInfo.proto
//----------------------------------------------------------------------------------------------------

using ProtoBuf;
using System;
using System.Collections.Generic;

namespace Genesis.GameClient
{
    [Serializable, ProtoContract(Name = @"PBArenaInfo")]
    public partial class PBArenaInfo
    {
        public PBArenaInfo() { }

        private int? m_MyRank;
        [ProtoMember(1, Name = @"MyRank", IsRequired = false, DataFormat = DataFormat.TwosComplement)]
        public int MyRank
        {
            get { return m_MyRank ?? default(int); }
            set { m_MyRank = value; }
        }
        public bool HasMyRank { get { return m_MyRank != null; } }
        private void ResetMyRank() { m_MyRank = null; }
        private bool ShouldSerializeMyRank() { return HasMyRank; }

        private int m_PlayArenaCount;
        [ProtoMember(2, Name = @"PlayArenaCount", IsRequired = true, DataFormat = DataFormat.TwosComplement)]
        public int PlayArenaCount
        {
            get { return m_PlayArenaCount; }
            set { m_PlayArenaCount = value; }
        }

        private int m_RefreshArenaCount;
        [ProtoMember(3, Name = @"RefreshArenaCount", IsRequired = true, DataFormat = DataFormat.TwosComplement)]
        public int RefreshArenaCount
        {
            get { return m_RefreshArenaCount; }
            set { m_RefreshArenaCount = value; }
        }

        private int? m_RewardType;
        [ProtoMember(4, Name = @"RewardType", IsRequired = false, DataFormat = DataFormat.TwosComplement)]
        public int RewardType
        {
            get { return m_RewardType ?? default(int); }
            set { m_RewardType = value; }
        }
        public bool HasRewardType { get { return m_RewardType != null; } }
        private void ResetRewardType() { m_RewardType = null; }
        private bool ShouldSerializeRewardType() { return HasRewardType; }

        private readonly List<PBArenaReportInfo> m_ArenaReportInfos = new List<PBArenaReportInfo>();
        [ProtoMember(5, Name = @"ArenaReportInfos", DataFormat = DataFormat.Default)]
        public List<PBArenaReportInfo> ArenaReportInfos
        {
            get { return m_ArenaReportInfos; }
        }
    }
}
