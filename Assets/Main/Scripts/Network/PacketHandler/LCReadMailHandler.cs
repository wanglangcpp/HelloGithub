//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'Handle' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using GameFramework.Network;

namespace Genesis.GameClient
{
    public class LCReadMailHandler : BasePacketHandler
    {
        public override int OpCode { get { return NetworkHelper.GetOpCode(PacketType.LobbyServerToClient, 3201); } }

        public override void Handle(object sender, Packet packet)
        {
            base.Handle(sender, packet);
            Handle(sender, packet as LCReadMail);
        }

        public static void Handle(object sender, LCReadMail response)
        {
            for (int i = 0; i < response.MailIds.Count; i++)
                GameEntry.Data.Mails.RefreshMailStatus(response.MailIds[i], true);

            if (response.MailIds.Count > 0)
            {
                GameEntry.Event.Fire(sender, new MailDataChangedEventArgs());
                GameEntry.Event.Fire(sender, new ReminderUpdatedEventArgs());
            }

            if (response.CompoundItemInfo.Count > 0)
            {
                var helper = new RewardCollectionHelper();
                helper.AddCompoundItems(response.CompoundItemInfo);

                GameEntry.Event.Fire(sender, new PickMailAttachmentEventArgs(helper));
                GameEntry.Event.Fire(sender, new ItemDataChangedEventArgs());
                GameEntry.Event.Fire(sender, new PlayerDataChangedEventArgs());
                //GameEntry.UI.OpenUIForm(UIFormId.Toast, new ToastDisplayData { Message = GameEntry.Localization.GetString("UI_TEXT_EMAIL_ALL_SUCCESS") });
            }
        }
    }
}
