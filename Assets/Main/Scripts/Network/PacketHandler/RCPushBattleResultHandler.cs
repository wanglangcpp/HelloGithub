//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'Handle' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using GameFramework;
using GameFramework.Network;

namespace Genesis.GameClient
{
    public class RCPushBattleResultHandler : BasePacketHandler
    {
        public override int OpCode { get { return NetworkHelper.GetOpCode(PacketType.RoomServerToClient, 4003); } }

        public override void Handle(object sender, Packet packet)
        {
            if (GameEntry.Data.Room.HasReconnected)
            {
                return;
            }

            base.Handle(sender, packet);
            RCPushBattleResult response = packet as RCPushBattleResult;
            Log.Info("Result has come: Win={0}, Reason={1}.", response.Result, response.Reason);
            GameEntry.Data.Room.ClearData();
            GameEntry.Event.Fire(this, new RoomBattleResultPushedEventArgs(response.Result, response.Reason));
            CloseRoom();
        }

        private static void CloseRoom()
        {
            var nc = GameEntry.Network.GetNetworkChannel(Constant.Network.RoomNetworkChannelName);
            if (nc == null)
            {
                Log.Error("Network channel 'Room' doesn't exist.");
                return;
            }

            nc.Close();
        }
    }
}
