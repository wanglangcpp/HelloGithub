//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'Handle' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using GameFramework.Network;

namespace Genesis.GameClient
{
    public class LCReplyFriendRequestHandler : BasePacketHandler
    {
        public override int OpCode { get { return NetworkHelper.GetOpCode(PacketType.LobbyServerToClient, 3104); } }

        public override void Handle(object sender, Packet packet)
        {
            base.Handle(sender, packet);
            Handle(sender, packet as LCReplyFriendRequest);
        }

        public static void Handle(object sender, LCReplyFriendRequest response)
        {
            if (response.Accept)
            {
                GameEntry.Data.Friends.AddOrModifyFriend(response.FriendInfo);
                GameEntry.Data.FriendRequests.RemoveRequest(response.FriendInfo.PlayerInfo.Id);
                GameEntry.Event.Fire(sender, new FriendDataChangedEventArgs(FriendDataChangedEventArgs.ChangeMode.OneFriendAdded));
                GameEntry.Event.Fire(sender, new FriendAddedEventArgs(response.FriendInfo.PlayerInfo.Id));
            }
            else
            {
                GameEntry.Data.FriendRequests.RemoveRequest(response.PlayerId);
                GameEntry.Event.Fire(sender, new FriendRequestRefusedEventArgs(response.PlayerId));
            }

            GameEntry.Event.Fire(sender, new ReminderUpdatedEventArgs());
            GameEntry.Event.Fire(sender, new PendingFriendRequestsDataChangedEventArgs());
        }
    }
}
