//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'Handle' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using GameFramework;
using GameFramework.Network;

namespace Genesis.GameClient
{
    public class RCPushEntityRemoveBuffHandler : BasePacketHandler
    {
        public override int OpCode { get { return NetworkHelper.GetOpCode(PacketType.RoomServerToClient, 4109); } }

        public override void Handle(object sender, Packet packet)
        {
            if (GameEntry.Data.Room.HasReconnected)
            {
                return;
            }
            base.Handle(sender, packet);
            RCPushEntityRemoveBuff response = packet as RCPushEntityRemoveBuff;

            var target = GameEntry.Entity.GetGameEntity(response.TargetEntityId) as TargetableObject;
            if (target==null)
            {
                return;
            }
            Log.Debug("RCPushEntityRemoveBuffHandler  =>" + (target == null)+"   "+ ((target == null)?"":target.Name));
            Log.Debug("RCPushEntityRemoveBuffHandler  =>" + "  " + target.Data == null + "target.Data.BuffPool");
            var buffPool = target.Data.BuffPool as OnlineBuffPool;
            if (buffPool == null)
            {
                Log.Info("BuffPool is not online .Target entity '{0}' is invalid.", response.TargetEntityId);
                return;
            }
            buffPool.RemoveBuffByIdsFromServer(response.Buffs);
        }
    }
}
