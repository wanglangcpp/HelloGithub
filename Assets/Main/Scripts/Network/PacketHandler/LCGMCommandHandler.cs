//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'Handle' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using GameFramework;
using GameFramework.Network;

namespace Genesis.GameClient
{
    public class LCGMCommandHandler : BasePacketHandler
    {
        public override int OpCode { get { return NetworkHelper.GetOpCode(PacketType.LobbyServerToClient, 999); } }

        public override void Handle(object sender, Packet packet)
        {
            base.Handle(sender, packet);
            LCGMCommand response = packet as LCGMCommand;
            GMCommandType type = (GMCommandType)response.Type;

            if (response.PlayerInfo != null)
            {
                GameEntry.Data.Player.UpdateData(response.PlayerInfo);
                GameEntry.Event.Fire(this, new PlayerDataChangedEventArgs());
            }

            if (response.LobbyHeroInfo != null)
            {
                switch (type)
                {
                    case GMCommandType.HeroLevelUp:
                        GameEntry.Data.LobbyHeros.GetData(response.LobbyHeroInfo.Type).UpdateData(response.LobbyHeroInfo);
                        break;
                    default:
                        GameEntry.Data.LobbyHeros.AddData(response.LobbyHeroInfo);
                        break;
                }

                GameEntry.Event.Fire(this, new LobbyHeroDataChangedEventArgs());
            }

            if (response.ItemInfo != null)
            {
                switch (type)
                {
                    case GMCommandType.AddItem:
                        GeneralItemUtility.UpdateItemsData(response.ItemInfo);
                        break;
                    default:
                        Log.Error("wrong type");
                        break;
                }
                GameEntry.Event.Fire(this, new ItemDataChangedEventArgs());
                GameEntry.Event.Fire(this, new HeroQualityItemDataChangeEventArgs());
            }
        }
    }
}
