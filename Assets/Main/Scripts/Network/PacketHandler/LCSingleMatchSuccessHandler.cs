//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'Handle' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using GameFramework;
using GameFramework.Network;

namespace Genesis.GameClient
{
    public class LCSingleMatchSuccessHandler : BasePacketHandler
    {
        public override int OpCode { get { return NetworkHelper.GetOpCode(PacketType.LobbyServerToClient, 5008); } }

        public override void Handle(object sender, Packet packet)
        {
            base.Handle(sender, packet);
            Handle(sender, packet as LCSingleMatchSuccess);
        }

        public static void Handle(object sender, LCSingleMatchSuccess response)
        {
            GameEntry.Network.SetNetworkChannelConnection(Constant.Network.RoomNetworkChannelName, false, response.Host, response.Port);
            GameEntry.Data.AddOrUpdateTempData(Constant.TempData.RoomId, response.RoomId);
            GameEntry.Data.AddOrUpdateTempData(Constant.TempData.RoomServerToken, response.Token);

            GameEntry.Data.PvpArenaOpponent.UpdateData(response.Opp, response.ServerId, response.ServerName, response.OppIndex, response.OppScore);

            GameEntry.Data.SingleMatchData.UpdateData(response.Me, response.MeIndex, 1, response.MeScore);
            GameEntry.Data.PvpArenaOpponent.DisConnected = false;
            //response.RoomId
            GameEntry.Event.Fire(sender, new SingleMatchSuccessArgs(1));
            Log.Info("Match PVP success, room id '{0}', server url '{1}:{2}'.", response.RoomId.ToString(), response.Host, response.Port.ToString());
        }
    }
}
