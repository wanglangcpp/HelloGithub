////////////////////////////////////////////////////////////////////////////////////
// This file is generated by TimeLineActionFactoryRefresher. 
// Run it from menu "Game Framework/Generate Code/Refresh Time Line Action Factory" 
// every time a time line action (and its data class) is added or removed.
////////////////////////////////////////////////////////////////////////////////////

using GameFramework;
using System.Collections.Generic;

namespace Genesis.GameClient
{
    public static class EntityTimeLineActionFactory
    {
        private static Dictionary<string, GameFrameworkFunc<TimeLineActionData, TimeLineAction<Entity>>> s_ActionCreators = new Dictionary<string, GameFrameworkFunc<TimeLineActionData, TimeLineAction<Entity>>>
        {
$ActionCreatorsDict
        };

        private static Dictionary<string, GameFrameworkFunc<TimeLineActionData>> s_DataCreators = new Dictionary<string, GameFrameworkFunc<TimeLineActionData>>
        {
$DataCreatorsDict
        };

        public static TimeLineAction<Entity> Create(TimeLineActionData timeLineActionData)
        {
            GameFrameworkFunc<TimeLineActionData, TimeLineAction<Entity>> creator;

            if (!s_ActionCreators.TryGetValue(timeLineActionData.ActionType, out creator))
            {
                Log.Error("EntityTimeLineActionFactory doesn't recognize the ActionType {0}.", timeLineActionData.ActionType);
                return null;
            }

            return creator(timeLineActionData);
        }

        public static TimeLineActionData CreateData(string actionType)
        {
            GameFrameworkFunc<TimeLineActionData> creator;

            if (!s_DataCreators.TryGetValue(actionType, out creator))
            {
                Log.Error("EntityTimeLineActionFactory doesn't recognize the ActionType {0}.", actionType);
                return null;
            }

            return creator();
        }

$ActionCreators

$DataCreators
    }
}
